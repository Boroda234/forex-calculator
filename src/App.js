import React, { useState, useEffect } from "react";

const ForexRiskCalculator = () => {
  const [accountBalance, setAccountBalance] = useState("10000");
  const [riskPercentage, setRiskPercentage] = useState("2");
  const [entryPrice, setEntryPrice] = useState("");
  const [stopLoss, setStopLoss] = useState("");
  const [takeProfit, setTakeProfit] = useState("");
  const [currencyPair, setCurrencyPair] = useState("EURUSD");
  const [tradeDirection, setTradeDirection] = useState("buy");
  const [customPipSize, setCustomPipSize] = useState("");
  const [useAutoPipSize, setUseAutoPipSize] = useState(true);
  const [useExternalData, setUseExternalData] = useState(false);
  const [isLoadingRates, setIsLoadingRates] = useState(false);
  const [lastUpdated, setLastUpdated] = useState(null);
  const [externalRates, setExternalRates] = useState({});

  const [results, setResults] = useState({
    riskAmount: 0,
    pipValue: 0,
    pipDistance: 0,
    positionSize: 0,
    potentialProfit: 0,
    riskRewardRatio: 0,
    pipSize: 0,
  });

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
  const fetchExchangeRates = async () => {
    setIsLoadingRates(true);
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π API –¥–ª—è –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç
      const response = await fetch(
        "https://api.exchangerate-api.com/v4/latest/USD"
      );
      const data = await response.json();

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –Ω–∞—à–∏—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
      const rates = {
        EURUSD: 1 / data.rates.EUR,
        GBPUSD: 1 / data.rates.GBP,
        USDCHF: data.rates.CHF,
        USDJPY: data.rates.JPY,
        AUDUSD: 1 / data.rates.AUD,
        USDCAD: data.rates.CAD,
        NZDUSD: 1 / data.rates.NZD,
        EURJPY: data.rates.JPY / data.rates.EUR,
        GBPJPY: data.rates.JPY / data.rates.GBP,
        // –î–ª—è –∑–æ–ª–æ—Ç–∞ –∏ –∏–Ω–¥–µ–∫—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –¥—Ä—É–≥–æ–π API
        XAUUSD: 2050.0,
        GER40: 17500.0,
      };

      setExternalRates(rates);
      setLastUpdated(new Date());

      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∑–æ–ª–æ—Ç–µ –∏ –∏–Ω–¥–µ–∫—Å–∞—Ö
      try {
        const goldResponse = await fetch(
          "https://api.metals.live/v1/spot/gold"
        );
        const goldData = await goldResponse.json();
        if (goldData && goldData[0] && goldData[0].price) {
          rates.XAUUSD = goldData[0].price;
        }
      } catch (goldError) {
        console.log("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ü–µ–Ω—É –∑–æ–ª–æ—Ç–∞:", goldError);
      }

      setExternalRates(rates);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç:", error);
      // –ü—Ä–∏ –æ—à–∏–±–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      setExternalRates({
        EURUSD: 1.085,
        GBPUSD: 1.265,
        USDCHF: 0.895,
        USDJPY: 149.5,
        AUDUSD: 0.675,
        USDCAD: 1.345,
        NZDUSD: 0.615,
        EURJPY: 161.2,
        GBPJPY: 188.5,
        XAUUSD: 2050.0,
        GER40: 17500.0,
      });
    } finally {
      setIsLoadingRates(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ç–æ—á–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–∏–ø—Å–∞
  const calculatePipValue = (pair, lotSize = 1) => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω–µ—à–Ω–∏–µ –∫—É—Ä—Å—ã –µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ, –∏–Ω–∞—á–µ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ
    const staticRates = {
      EURUSD: 1.085,
      GBPUSD: 1.265,
      USDCHF: 0.895,
      USDJPY: 149.5,
      AUDUSD: 0.675,
      USDCAD: 1.345,
      NZDUSD: 0.615,
      EURJPY: 161.2,
      GBPJPY: 188.5,
      XAUUSD: 2050.0,
      GER40: 17500.0,
    };

    const exchangeRates =
      useExternalData && Object.keys(externalRates).length > 0
        ? externalRates
        : staticRates;

    const rate = exchangeRates[pair] || 1;

    // –†–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–∏–ø—Å–∞ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ø–∞—Ä
    if (pair === "XAUUSD") {
      // –ó–æ–ª–æ—Ç–æ - —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç (–ø–∏–ø = 0.1)
      return 1 * lotSize; // $1 –∑–∞ 0.1 –ø—É–Ω–∫—Ç –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ª–æ—Ç–∞
    } else if (pair === "GER40") {
      // –ù–µ–º–µ—Ü–∫–∏–π –∏–Ω–¥–µ–∫—Å DAX - CFD –Ω–∞ –∏–Ω–¥–µ–∫—Å
      return 1 * lotSize; // $1 –∑–∞ –ø—É–Ω–∫—Ç –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ª–æ—Ç–∞
    } else if (pair.endsWith("USD")) {
      // –ü—Ä—è–º—ã–µ –ø–∞—Ä—ã (XXX/USD)
      return 10 * lotSize; // $10 –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ—Ç
    } else if (pair.startsWith("USD")) {
      // –û–±—Ä–∞—Ç–Ω—ã–µ –ø–∞—Ä—ã (USD/XXX)
      if (pair.includes("JPY")) {
        return (1000 / rate) * lotSize; // –î–ª—è –π–µ–Ω—ã: 1000 –π–µ–Ω / –∫—É—Ä—Å
      }
      return (10 / rate) * lotSize;
    } else if (pair.includes("JPY")) {
      // –ö—Ä–æ—Å—Å-–ø–∞—Ä—ã —Å –π–µ–Ω–æ–π
      return (1000 / rate) * lotSize; // –û—Å–æ–±—ã–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –π–µ–Ω—ã –≤ –∫—Ä–æ—Å—Å-–ø–∞—Ä–∞—Ö
    } else {
      // –ö—Ä–æ—Å—Å-–ø–∞—Ä—ã
      return 10 * lotSize; // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç –¥–ª—è –∫—Ä–æ—Å—Å-–ø–∞—Ä
    }
  };

  const calculateRisk = () => {
    const balance = parseFloat(accountBalance);
    const risk = parseFloat(riskPercentage);
    const entry = parseFloat(entryPrice);
    const sl = parseFloat(stopLoss);
    const tp = parseFloat(takeProfit);

    if (!balance || !risk || !entry || !sl) return;

    // –†–∞—Å—á–µ—Ç —Å—É–º–º—ã —Ä–∏—Å–∫–∞
    const riskAmount = (balance * risk) / 100;

    // –†–∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –≤ –ø–∏–ø—Å–∞—Ö –¥–æ —Å—Ç–æ–ø-–ª–æ—Å—Å–∞
    let pipDistance;
    let pipSize;

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏–ø–∞ –∏–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π
    if (!useAutoPipSize && customPipSize) {
      pipSize = parseFloat(customPipSize);
    } else {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–∏–ø–∞
      if (currencyPair.includes("JPY")) {
        pipSize = 0.01; // –î–ª—è –≤—Å–µ—Ö –ø–∞—Ä —Å –π–µ–Ω–æ–π –ø–∏–ø = 0.01
      } else if (currencyPair === "XAUUSD") {
        pipSize = 0.1; // –î–ª—è –∑–æ–ª–æ—Ç–∞ –ø–∏–ø = 0.1
      } else if (currencyPair === "GER40") {
        pipSize = 1; // –î–ª—è –∏–Ω–¥–µ–∫—Å–∞ –ø–∏–ø = 1 –ø—É–Ω–∫—Ç
      } else {
        pipSize = 0.0001; // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏–ø–∞
      }
    }

    if (tradeDirection === "buy") {
      pipDistance = Math.abs(entry - sl) / pipSize;
    } else {
      pipDistance = Math.abs(sl - entry) / pipSize;
    }

    // –¢–æ—á–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –ø–∏–ø—Å–∞
    const pipValue = calculatePipValue(currencyPair, 1);

    // –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏ –≤ –ª–æ—Ç–∞—Ö
    const positionSize = riskAmount / (pipDistance * pipValue);

    // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å
    let potentialProfit = 0;
    let riskRewardRatio = 0;

    if (tp) {
      let profitPips;
      if (tradeDirection === "buy") {
        profitPips = Math.abs(tp - entry) / pipSize;
      } else {
        profitPips = Math.abs(entry - tp) / pipSize;
      }
      potentialProfit = profitPips * pipValue * positionSize;
      riskRewardRatio = potentialProfit / riskAmount;
    }

    setResults({
      riskAmount: riskAmount.toFixed(2),
      pipValue: pipValue.toFixed(2),
      pipDistance: pipDistance.toFixed(1),
      positionSize: positionSize.toFixed(2),
      potentialProfit: potentialProfit.toFixed(2),
      riskRewardRatio: riskRewardRatio.toFixed(2),
      pipSize: pipSize,
    });
  };

  useEffect(() => {
    calculateRisk();
  }, [
    accountBalance,
    riskPercentage,
    entryPrice,
    stopLoss,
    takeProfit,
    currencyPair,
    tradeDirection,
    customPipSize,
    useAutoPipSize,
    externalRates,
  ]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–æ–≤ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏ –≤–Ω–µ—à–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (useExternalData) {
      fetchExchangeRates();
      // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
      const interval = setInterval(fetchExchangeRates, 5 * 60 * 1000);
      return () => clearInterval(interval);
    }
  }, [useExternalData]);

  return (
    <div className="max-w-4xl mx-auto p-6 bg-gray-50 min-h-screen">
      <div className="bg-white rounded-lg shadow-lg p-8">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            üìä –§–æ—Ä–µ–∫—Å –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ü–æ–∑–∏—Ü–∏–∏ –∏ –†–∏—Å–∫–∞
          </h1>
          <p className="text-gray-600 text-sm">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏ –≤ —Ç–æ—Ä–≥–æ–≤–ª–µ
          </p>
        </div>

        <div className="grid md:grid-cols-2 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö */}
          <div className="space-y-6">
            <h2 className="text-xl font-semibold text-gray-700 border-b pb-2">
              –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ—Ä–≥–æ–≤–ª–∏
            </h2>

            <div className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –ë–∞–ª–∞–Ω—Å —Å—á–µ—Ç–∞ ($)
                </label>
                <input
                  type="number"
                  value={accountBalance}
                  onChange={(e) => setAccountBalance(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="10000"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –†–∏—Å–∫ –Ω–∞ —Å–¥–µ–ª–∫—É (%)
                </label>
                <input
                  type="number"
                  value={riskPercentage}
                  onChange={(e) => setRiskPercentage(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="2"
                  step="0.1"
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞
                </label>
                <select
                  value={currencyPair}
                  onChange={(e) => setCurrencyPair(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                >
                  <option value="EURUSD">EUR/USD</option>
                  <option value="GBPUSD">GBP/USD</option>
                  <option value="USDCHF">USD/CHF</option>
                  <option value="USDJPY">USD/JPY</option>
                  <option value="EURJPY">EUR/JPY</option>
                  <option value="GBPJPY">GBP/JPY</option>
                  <option value="AUDUSD">AUD/USD</option>
                  <option value="USDCAD">USD/CAD</option>
                  <option value="NZDUSD">NZD/USD</option>
                  <option value="XAUUSD">XAU/USD (–ó–æ–ª–æ—Ç–æ)</option>
                  <option value="GER40">GER40 (DAX)</option>
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–¥–µ–ª–∫–∏
                </label>
                <div className="flex space-x-4">
                  <button
                    onClick={() => setTradeDirection("buy")}
                    className={`px-4 py-2 rounded-md transition-colors ${
                      tradeDirection === "buy"
                        ? "bg-green-500 text-white shadow-md"
                        : "bg-gray-200 text-gray-700 hover:bg-gray-300"
                    }`}
                  >
                    üü¢ –ü–æ–∫—É–ø–∫–∞
                  </button>
                  <button
                    onClick={() => setTradeDirection("sell")}
                    className={`px-4 py-2 rounded-md transition-colors ${
                      tradeDirection === "sell"
                        ? "bg-red-500 text-white shadow-md"
                        : "bg-gray-200 text-gray-700 hover:bg-gray-300"
                    }`}
                  >
                    üî¥ –ü—Ä–æ–¥–∞–∂–∞
                  </button>
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –¶–µ–Ω–∞ –≤—Ö–æ–¥–∞
                </label>
                <input
                  type="number"
                  value={entryPrice}
                  onChange={(e) => setEntryPrice(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder={
                    currencyPair === "XAUUSD"
                      ? "2050.0"
                      : currencyPair === "GER40"
                      ? "17500"
                      : "1.1234"
                  }
                  step={
                    currencyPair === "XAUUSD"
                      ? "0.1"
                      : currencyPair === "GER40"
                      ? "1"
                      : "0.0001"
                  }
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –°—Ç–æ–ø-–ª–æ—Å—Å
                </label>
                <input
                  type="number"
                  value={stopLoss}
                  onChange={(e) => setStopLoss(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                  placeholder={
                    currencyPair === "XAUUSD"
                      ? "2040.0"
                      : currencyPair === "GER40"
                      ? "17400"
                      : "1.1200"
                  }
                  step={
                    currencyPair === "XAUUSD"
                      ? "0.1"
                      : currencyPair === "GER40"
                      ? "1"
                      : "0.0001"
                  }
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-600 mb-1">
                  –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                </label>
                <input
                  type="number"
                  value={takeProfit}
                  onChange={(e) => setTakeProfit(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500"
                  placeholder={
                    currencyPair === "XAUUSD"
                      ? "2070.0"
                      : currencyPair === "GER40"
                      ? "17700"
                      : "1.1300"
                  }
                  step={
                    currencyPair === "XAUUSD"
                      ? "0.1"
                      : currencyPair === "GER40"
                      ? "1"
                      : "0.0001"
                  }
                />
              </div>

              <div className="border-t pt-4 space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-600 mb-2">
                    –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
                  </label>
                  <div className="space-y-3">
                    <div className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                      <div className="flex items-center space-x-2">
                        <input
                          type="checkbox"
                          id="external-data"
                          checked={useExternalData}
                          onChange={(e) => setUseExternalData(e.target.checked)}
                          className="text-blue-500"
                        />
                        <label
                          htmlFor="external-data"
                          className="text-sm text-gray-700"
                        >
                          üåê –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
                        </label>
                      </div>
                      {useExternalData && (
                        <button
                          onClick={fetchExchangeRates}
                          disabled={isLoadingRates}
                          className="px-3 py-1 text-xs bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 transition-colors"
                        >
                          {isLoadingRates ? "üîÑ" : "‚Üª"} –û–±–Ω–æ–≤–∏—Ç—å
                        </button>
                      )}
                    </div>

                    {useExternalData && lastUpdated && (
                      <div className="text-xs text-gray-500 text-center">
                        üì° –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:{" "}
                        {lastUpdated.toLocaleTimeString("ru-RU")}
                        <br />
                        –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                      </div>
                    )}
                  </div>
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-600 mb-2">
                    –†–∞–∑–º–µ—Ä –ø–∏–ø–∞
                  </label>
                  <div className="space-y-3">
                    <div className="flex items-center space-x-2">
                      <input
                        type="radio"
                        id="auto-pip"
                        checked={useAutoPipSize}
                        onChange={() => setUseAutoPipSize(true)}
                        className="text-blue-500"
                      />
                      <label
                        htmlFor="auto-pip"
                        className="text-sm text-gray-700"
                      >
                        ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (
                        {currencyPair.includes("JPY")
                          ? "0.01"
                          : currencyPair === "XAUUSD"
                          ? "0.1"
                          : currencyPair === "GER40"
                          ? "1"
                          : "0.0001"}
                        )
                      </label>
                    </div>
                    <div className="flex items-center space-x-2">
                      <input
                        type="radio"
                        id="custom-pip"
                        checked={!useAutoPipSize}
                        onChange={() => setUseAutoPipSize(false)}
                        className="text-blue-500"
                      />
                      <label
                        htmlFor="custom-pip"
                        className="text-sm text-gray-700"
                      >
                        ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä—É—á–Ω—É—é
                      </label>
                    </div>
                    {!useAutoPipSize && (
                      <input
                        type="number"
                        value={customPipSize}
                        onChange={(e) => setCustomPipSize(e.target.value)}
                        className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 ml-6"
                        placeholder="0.0001"
                        step="0.0001"
                      />
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞ - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
          <div className="space-y-6">
            <h2 className="text-xl font-semibold text-gray-700 border-b pb-2">
              –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞
            </h2>

            <div className="space-y-4">
              <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                <h3 className="font-semibold text-red-800 mb-2 flex items-center">
                  üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–æ–º
                </h3>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span>–°—É–º–º–∞ —Ä–∏—Å–∫–∞:</span>
                    <span className="font-bold text-red-600">
                      ${results.riskAmount}
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ SL:</span>
                    <span>
                      {results.pipDistance}{" "}
                      {currencyPair === "GER40" ? "–ø—É–Ω–∫—Ç–æ–≤" : "–ø–∏–ø—Å–æ–≤"}
                    </span>
                  </div>
                </div>
              </div>

              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <h3 className="font-semibold text-blue-800 mb-2 flex items-center">
                  üìà –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏
                </h3>
                <div className="space-y-2 text-sm">
                  <div className="flex justify-between">
                    <span>–†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏:</span>
                    <span className="font-bold text-blue-600">
                      {results.positionSize} –ª–æ—Ç–æ–≤
                    </span>
                  </div>
                  <div className="flex justify-between">
                    <span>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–∏–ø—Å–∞:</span>
                    <span>${results.pipValue}</span>
                  </div>
                  <div className="flex justify-between">
                    <span>–†–∞–∑–º–µ—Ä –ø–∏–ø–∞:</span>
                    <span className="text-xs font-mono bg-gray-100 px-2 py-1 rounded">
                      {results.pipSize === 1 ? "1.0" : results.pipSize}
                      {!useAutoPipSize
                        ? " üîß"
                        : useExternalData
                        ? " üåê"
                        : " ü§ñ"}
                    </span>
                  </div>
                  {useExternalData && (
                    <div className="flex justify-between">
                      <span>–ö—É—Ä—Å –≤–∞–ª—é—Ç:</span>
                      <span className="text-xs text-gray-500">
                        {isLoadingRates ? "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞..." : "üåê –ê–∫—Ç—É–∞–ª—å–Ω—ã–π"}
                      </span>
                    </div>
                  )}
                </div>
              </div>

              {takeProfit && (
                <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                  <h3 className="font-semibold text-green-800 mb-2 flex items-center">
                    üéØ –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–∏–±—ã–ª—å
                  </h3>
                  <div className="space-y-2 text-sm">
                    <div className="flex justify-between">
                      <span>–ü—Ä–∏–±—ã–ª—å:</span>
                      <span className="font-bold text-green-600">
                        ${results.potentialProfit}
                      </span>
                    </div>
                    <div className="flex justify-between">
                      <span>–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ R/R:</span>
                      <span
                        className={`font-bold ${
                          parseFloat(results.riskRewardRatio) >= 2
                            ? "text-green-600"
                            : parseFloat(results.riskRewardRatio) >= 1
                            ? "text-orange-600"
                            : "text-red-600"
                        }`}
                      >
                        1:{results.riskRewardRatio}
                      </span>
                    </div>
                  </div>
                </div>
              )}

              <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
                <h3 className="font-semibold text-gray-800 mb-2 flex items-center">
                  üìã –°–≤–æ–¥–∫–∞ —Å–¥–µ–ª–∫–∏
                </h3>
                <div className="text-xs text-gray-600 space-y-1">
                  <p>
                    ‚Ä¢ –í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞: <strong>{currencyPair}</strong>
                  </p>
                  <p>
                    ‚Ä¢ –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:{" "}
                    <strong>
                      {tradeDirection === "buy" ? "–ü–æ–∫—É–ø–∫–∞" : "–ü—Ä–æ–¥–∞–∂–∞"}
                    </strong>
                  </p>
                  <p>
                    ‚Ä¢ –†–∏—Å–∫: <strong>{riskPercentage}%</strong> –æ—Ç –∫–∞–ø–∏—Ç–∞–ª–∞
                  </p>
                  {parseFloat(results.riskRewardRatio) > 0 && (
                    <p
                      className={
                        parseFloat(results.riskRewardRatio) >= 2
                          ? "text-green-600"
                          : "text-orange-600"
                      }
                    >
                      ‚Ä¢{" "}
                      {parseFloat(results.riskRewardRatio) >= 2
                        ? "‚úÖ –û—Ç–ª–∏—á–Ω–æ–µ"
                        : parseFloat(results.riskRewardRatio) >= 1
                        ? "‚ö†Ô∏è –ü—Ä–∏–µ–º–ª–µ–º–æ–µ"
                        : "‚ùå –ü–ª–æ—Ö–æ–µ"}{" "}
                      —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å
                    </p>
                  )}
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="mt-8 space-y-4">
          <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
            <h4 className="font-semibold text-blue-800 mb-2">
              ‚ÑπÔ∏è –ö–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–∏–ø—Å–∞:
            </h4>
            <ul className="text-sm text-blue-700 space-y-1">
              <li>
                ‚Ä¢ <strong>–ü—Ä—è–º—ã–µ –ø–∞—Ä—ã (XXX/USD):</strong> $10 –∑–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ª–æ—Ç
              </li>
              <li>
                ‚Ä¢ <strong>–û–±—Ä–∞—Ç–Ω—ã–µ –ø–∞—Ä—ã (USD/XXX):</strong> $10 / —Ç–µ–∫—É—â–∏–π –∫—É—Ä—Å
              </li>
              <li>
                ‚Ä¢ <strong>–ü–∞—Ä—ã —Å JPY:</strong> –ø–∏–ø = 0.01, —Å—Ç–æ–∏–º–æ—Å—Ç—å = 1000 –π–µ–Ω
                / –∫—É—Ä—Å
              </li>
              <li>
                ‚Ä¢ <strong>XAU/USD (–ó–æ–ª–æ—Ç–æ):</strong> –ø–∏–ø = 0.1, $1 –∑–∞ –ø–∏–ø
              </li>
              <li>
                ‚Ä¢ <strong>GER40 (DAX):</strong> –ø–∏–ø = 1 –ø—É–Ω–∫—Ç, $1 –∑–∞ –ø—É–Ω–∫—Ç
              </li>
              <li>
                ‚Ä¢ <strong>–û–±—ã—á–Ω—ã–µ –ø–∞—Ä—ã:</strong> –ø–∏–ø = 0.0001, $10 –∑–∞ –ª–æ—Ç
              </li>
              <li>
                ‚Ä¢ <strong>–ù–∞—Å—Ç—Ä–æ–π–∫–∞:</strong> –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏–ø–∞
              </li>
              <li>
                ‚Ä¢ <strong>–ö—Ä–æ—Å—Å-–ø–∞—Ä—ã:</strong> —Ä–∞—Å—á–µ—Ç —á–µ—Ä–µ–∑ USD —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç
              </li>
            </ul>
          </div>

          <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
            <h4 className="font-semibold text-yellow-800 mb-2">
              ‚ö†Ô∏è –í–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è:
            </h4>
            <ul className="text-sm text-yellow-700 space-y-1">
              <li>
                ‚Ä¢{" "}
                {useExternalData
                  ? "–ö—É—Ä—Å—ã –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç"
                  : "–ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç"}
              </li>
              <li>‚Ä¢ –†–∞—Å—á–µ—Ç—ã –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –∑–Ω–∞—á–µ–Ω–∏–π –≤–∞—à–µ–≥–æ –±—Ä–æ–∫–µ—Ä–∞</li>
              <li>‚Ä¢ –í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ —Ä–∞—Å—á–µ—Ç—ã –Ω–∞ —Å–≤–æ–µ–π —Ç–æ—Ä–≥–æ–≤–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ</li>
              <li>‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∏—Å–∫ –Ω–µ –±–æ–ª–µ–µ 1-2% –Ω–∞ —Å–¥–µ–ª–∫—É</li>
              <li>‚Ä¢ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1:2</li>
              {useExternalData && (
                <li>
                  ‚Ä¢ API –¥–∞–Ω–Ω—ã–µ: exchangerate-api.com (–≤–∞–ª—é—Ç—ã), metals.live
                  (–∑–æ–ª–æ—Ç–æ)
                </li>
              )}
            </ul>
          </div>
        </div>

        <footer className="mt-8 pt-4 border-t text-center text-xs text-gray-500">
          <p>
            ¬© 2025 –§–æ—Ä–µ–∫—Å –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä | –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ
            —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∏—Å–∫–∞–º–∏
          </p>
        </footer>
      </div>
    </div>
  );
};

export default ForexRiskCalculator;
